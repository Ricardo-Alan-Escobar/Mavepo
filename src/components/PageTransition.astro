---
// src/components/PageExitAnimation.astro
interface Props {
  duration?: number;
}

const { duration = 0.4 } = Astro.props;
---

<style>
  @keyframes fadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }

  body.fade-exit {
    animation: fadeOut var(--exit-duration) ease-in forwards;
  }
</style>

<!-- Pasamos la duración como atributo data -->
<div id="page-exit-config" data-duration={duration}></div>

<script is:inline>
  if (!window.__pageExitHandled) {
    window.__pageExitHandled = true;

    const config = document.getElementById('page-exit-config');
    const duration = parseFloat(config?.dataset.duration || '0.4');

    document.addEventListener('click', (e) => {
      const link = e.target.closest('a');
      if (!link) return;

      const isSameOrigin = link.href.startsWith(window.location.origin);
      const isNewTab = link.target === '_blank';
      const isHash = link.hash && link.pathname === window.location.pathname;
      const isDownload = link.hasAttribute('download');
      const isIgnored = link.hasAttribute('data-no-transition');

      if (!isSameOrigin || isNewTab || isHash || isDownload || isIgnored) return;

      e.preventDefault();
      document.body.classList.add('fade-exit');

      setTimeout(() => {
        window.location.href = link.href;
      }, duration * 1000);
    });
  }
</script>

<!-- Aplicamos la duración como variable CSS para la animación -->
<style>
  :root {
    --exit-duration: {duration}s;
  }
</style>
